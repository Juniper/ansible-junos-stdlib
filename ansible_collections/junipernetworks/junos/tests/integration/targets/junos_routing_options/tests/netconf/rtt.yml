---
- ansible.builtin.debug:
    msg:
      START junos_routing_options round trip integration tests on connection={{
      ansible_connection }}

- block:
    - ansible.builtin.include_tasks: _reset_config.yaml

    - name: Apply the provided configuration (base config)
      register: base_config
      junipernetworks.junos.junos_routing_options:
        config:
          autonomous_system:
            as_number: 2
            asdot_notation: true
            lo  ops: 4
          router_id: 12.12.12.12
        state: merged

    - name: Gather interfaces facts
      junipernetworks.junos.junos_facts:
        gather_subset:
          - default
        gather_network_resources:
          - routing_options

    - name: Apply the provided configuration (config to be reverted)
      register: result
      junipernetworks.junos.junos_routing_options:
        config:
          autonomous_system:
            as_number: 1
            asdot_notation: true
          router_id: "10.10.10.10"
        state: replaced

    - name: Assert that changes were applied
      ansible.builtin.assert:
        that: result['changed'] == true

    - name: Revert back to base config using facts round trip
      register: revert
      junipernetworks.junos.junos_routing_options:
        config: "{{ ansible_facts['network_resources']['routing_options'] }}"
        state: replaced

    - name: Assert that before dicts are correct
      ansible.builtin.assert:
        that:
          - result.changed == True
          - "{{ result['after'] == revert['before'] }}"

    - name: Assert that config was reverted
      ansible.builtin.assert:
        that:
          - result.changed == True
          - "{{ base_config['after'] == revert['after'] }}"
  always:
    - ansible.builtin.include_tasks: _reset_config.yaml

- ansible.builtin.debug:
    msg:
      END junos_routing_options round trip integration tests on connection={{ ansible_connection
      }}
