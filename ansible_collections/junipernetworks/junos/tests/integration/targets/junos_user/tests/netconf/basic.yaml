---
- ansible.builtin.debug:
    msg="START junos_user netconf/basic.yaml on connection={{ ansible_connection
    }}"

- name: setup - remove user
  junipernetworks.junos.junos_user:
    name: test_user
    state: absent

- name: Create user
  register: result
  junipernetworks.junos.junos_user:
    name: test_user
    state: present
    full_name: test_user
    role: operator

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<name>test_user</name>' in config.xml"
      - "'<full-name>test_user</full-name>' in config.xml"
      - "'<class>operator</class>' in config.xml"

- name: Create user again (idempotent)
  register: result
  junipernetworks.junos.junos_user:
    name: test_user
    state: present
    full_name: test_user
    role: operator

- ansible.builtin.assert:
    that:
      - result.changed == false

- name: Deactivate user
  register: result
  junipernetworks.junos.junos_user:
    name: test_user
    state: present
    full_name: test_user
    role: operator
    active: false

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - '''<user inactive="inactive">'' in config.xml'
      - "'<name>test_user</name>' in config.xml"

- name: Activate user
  register: result
  junipernetworks.junos.junos_user:
    name: test_user
    state: present
    full_name: test_user
    role: operator
    active: true

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<name>test_user</name>' in config.xml"
      - "'<full-name>test_user</full-name>' in config.xml"
      - "'<class>operator</class>' in config.xml"

- name: Delete user
  register: result
  junipernetworks.junos.junos_user:
    name: test_user
    state: absent
    full_name: test_user
    role: operator

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<name>test_user</name>' not in config.xml"
      - "'<full-name>test_user</full-name>' not in config.xml"

- name: Delete user again (idempotent check)
  register: result
  junipernetworks.junos.junos_user:
    name: test_user
    state: absent
    full_name: test_user
    role: operator

- ansible.builtin.assert:
    that:
      - result.changed == false

- name: Teardown list of users
  register: result
  junipernetworks.junos.junos_user:
    aggregate:
      - name: test_user1
        state: absent

      - name: test_user2
        state: absent

- name: Create list of users
  register: result
  junipernetworks.junos.junos_user:
    aggregate:
      - name: test_user1
        full_name: test_user2
        role: operator
        state: present

      - name: test_user2
        full_name: test_user2
        role: read-only
        state: present

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<name>test_user1</name>' in config.xml"
      - "'<name>test_user2</name>' in config.xml"

- name: Delete list of users
  register: result
  junipernetworks.junos.junos_user:
    aggregate:
      - name: test_user1
        full_name: test_user2
        role: operator
        state: absent

      - name: test_user2
        full_name: test_user2
        role: read-only
        state: absent

- name: Get running configuration
  register: config
  junipernetworks.junos.junos_rpc:
    rpc: get-configuration

- ansible.builtin.assert:
    that:
      - result.changed == true
      - "'<name>test_user1</name>' not in config.xml"
      - "'<name>test_user2</name>' not in config.xml"

- name: Create list of users
  register: result
  junipernetworks.junos.junos_user:
    aggregate:
      - name: "{{ ansible_user|default('ansible') }}"

      - name: test_user1
        full_name: test_user2
        role: operator

      - name: test_user2
        full_name: test_user2
        role: read-only

- name: Purge users except the users in aggregate
  register: result
  junipernetworks.junos.junos_user:
    aggregate:
      - name: "{{ ansible_user|default('ansible') }}"
    purge: true

- ansible.builtin.assert:
    that:
      - result.changed == true
      - result.diff.prepared is search("\- *user test_user1")
      - result.diff.prepared is search("\- *user test_user2")

- ansible.builtin.debug:
    msg="END junos_user netconf/basic.yaml on connection={{ ansible_connection
    }}"
