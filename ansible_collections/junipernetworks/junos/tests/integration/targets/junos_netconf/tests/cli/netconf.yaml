---
- ansible.builtin.debug: msg="START netconf/netconf.yaml on connection={{ ansible_connection }}"

- name: Ensure netconf is enabled
  junipernetworks.junos.junos_netconf:
    state: present

- name: idempotent tests
  register: result
  junipernetworks.junos.junos_netconf:
    state: present

- ansible.builtin.assert:
    that:
      - result.changed == false

- name: wait for netconf port tcp/830 to be open
  wait_for:
    host: "{{ hostvars[item].ansible_host }}"
    port: 830
  with_inventory_hostnames: junos

- name: Reset ansible connections
  meta: reset_connection

- name: Ensure we can communicate over netconf
  ansible.builtin.include_tasks: "{{ role_path }}/tests/utils/junos_command.yaml"
  vars:
    ansible_connection: ansible.netcommon.netconf
    ansible_port: 830
    is_ignore_errors: false

- name: Disable netconf (check mode)
  register: result
  check_mode: true
  junipernetworks.junos.junos_netconf:
    state: absent

- ansible.builtin.assert:
    that:
      - result.changed == true

- name: wait for netconf port tcp/830 to be open
  wait_for:
    host: "{{ hostvars[item].ansible_host }}"
    port: 830
  with_inventory_hostnames: junos

- name: Reset ansible connections
  meta: reset_connection

- name: Ensure we can communicate over netconf
  ansible.builtin.include_tasks: "{{ role_path }}/tests/utils/junos_command.yaml"
  vars:
    ansible_connection: ansible.netcommon.netconf
    ansible_port: 830
    is_ignore_errors: false

- name: Disable netconf
  register: result
  junipernetworks.junos.junos_netconf:
    state: absent

- ansible.builtin.assert:
    that:
      - result.changed == true

- name: idempotent tests
  register: result
  junipernetworks.junos.junos_netconf:
    state: absent

- ansible.builtin.assert:
    that:
      - result.changed == false

- name: wait for netconf port tcp/830 to be closed
  wait_for:
    host: "{{ hostvars[item].ansible_host }}"
    port: 830
    state: stopped
  with_inventory_hostnames: junos

- name: Reset ansible connections
  meta: reset_connection

- name: Ensure we can NOT talk via netconf
  ansible.builtin.include_tasks: "{{ role_path }}/tests/utils/junos_command.yaml"
  vars:
    ansible_connection: ansible.netcommon.netconf
    ansible_port: 830
    is_ignore_errors: true

- ansible.builtin.assert:
    that:
      - result.failed == true

- name: Enable netconf (check mode)
  register: result
  check_mode: true
  junipernetworks.junos.junos_netconf:
    state: present

- ansible.builtin.assert:
    that:
      - result.changed == true

- name: wait for netconf port tcp/830 to be closed
  wait_for:
    host: "{{ hostvars[item].ansible_host }}"
    port: 830
    state: stopped
  with_inventory_hostnames: junos

- name: Reset ansible connections
  meta: reset_connection

- name: Ensure we can NOT talk via netconf
  ansible.builtin.include_tasks: "{{ role_path }}/tests/utils/junos_command.yaml"
  vars:
    ansible_connection: ansible.netcommon.netconf
    ansible_port: 830
    is_ignore_errors: true

- ansible.builtin.assert:
    that:
      - result.failed == true

- name: re-enable netconf
  junipernetworks.junos.junos_netconf:
    state: present

- ansible.builtin.debug: msg="END netconf/netconfg.yaml on connection={{ ansible_connection }}"
